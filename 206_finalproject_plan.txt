SI 206 W17
Put your name here: Aiwei Wu

----

Which option for the final project are you choosing -- 1, 2, or 3? 2

IF YOU ARE CHOOSING OPTION 3, answer the following questions:

* Write 1-3 sentences summarizing what the goal of your project is:


* What are your two data sources? Provide links to documentation or websites you will be getting data from.


* Why are you proposing this project?


* What will the output of this project be? What will it look like, and what information will it contain?


* What are your concerns about this proposal?


-----

THE FOLLOWING QUESTIONS ARE FOR EVERYONE. (Though they may be easier if you are choosing Option 1 or 2, because you can reference the Option 1 or 2 instructions.)

* What will at least one of the classes you're going to define be called?
Class Movie
Class Twitter



* What will that class take as input to its constructor?
A dictionary that represents a movie


/Users/wuaiwei/Desktop/HW7/206_project_plan.py
* What will 1 instance of this class represent?
self.title will represent the title of the movie



* What are 3 instance variables this class will have? What will they be called, and what information will they hold? Why are they important?
self.movie_info will represent the dictionary that represents the movie.



* Explain 2 methods the class will have that are not the class constructor (__init__ method) by answering the following questions for each. 
ONE METHOD:
- What will the name of the method be?
get_movie_info


- What will the method do?
The method will take in a title of the movie and make request to OMdb. The method will return the information of this movie, such as the rating, actors, languages.


- Will it take any additional input? 
No


- Will it return anything? Should it change anything about the instance/an instance variable? 
It will return the the information of the movie in the format of a dictionary. It will not change any instance variable.


- Why is it useful for this class definition, in this program?
This method will collect all the information of a movie and make it easier for storing those info into the database later.




ANOTHER METHOD:
- What will the name of the method be?
data_storage


- What will the method do?
It will take in the dictionary of the movie information and store the information into the database.
- Will it take any additional input?
No 


- Will it return anything? Should it change anything about the instance/an instance variable? 
No


- Why is it useful for this class definition, in this program?
It stores the information of a movie (rating, actors, id, etc) into the table we create before.


[If you definitely want to have a third, feel free to answer those questions a third time, because you'll have to do so eventually. when you write documentation!]


* What will the tables in your database be?
Tweets
Users
Movie



* What fields will each database table have? Which field of them is the primary key? You should list the fields for each database table here, e.g.
Tweets:
tweet text, 
tweet_id(primary key), 
tweet user, 
movie, 
num_fav, 
num_retweet

Users:
User ID (primary key)
User screen name
Number of favorites that user has ever made

Movie:
ID (primary key) 
Title of the movie
Director of the movie 
Number of languages the movie has
IMDB rating of the movie
The top billed actor in the movie

* List, in English, 2 queries you'll want to make from your database. At least one should be a JOIN. You can always change these later, but start with  ideas you're interested in and lessen the work on yourself later on! 
(e.g. from class examples, maybe "I want to make a query that accesses the numbers of times each user has favorited tweets, and the number of times tweets that user posted have been favorited -- so I'll be joining the Tweets table and the Users table")
I want to make a query that accesses the title of the movie being mentioned in the tweets, and the movie title being searched in OMdb -- so I'll be joining the Tweets table and the Movie table

I want to make a query that accesses the IMdb ratings of all the movies.
query = "SELECT imdb_rating FROM Movies;"

I want to make a query that inner join the movie title and the text of the tweet 

query = "SELECT Tweets.text, Movies.title FROM Tweets INNER JOIN Movies on Tweets.movie = Users.title";

* What are at least 2 of the data processing mechanics you're planning to use? 

Dictionary comprehension: find the relationship between the IMdb rating of a movie and the number of tweets that mentioned it. The key will be the movie title, the value is a list of the rating and number of tweets.

Sorting: Sort the movies based on the product of IMdb rating and the number of tweets, from the largest to the smallest.






* Why will each of those be useful to you? What data might you use it on? 
(e.g. "Set comprehension: I think I'm going to be looking for unique names and proper nouns in this big set of text, so I'm going to use a set comprehension"). 
>>>This is especially important if you are doing Option 3, but it's important for everyone!<<<
Dictionary comprehension: I can see a clear relationship of the data according to the key-value pair.

Sorting: I can use my data to rank the movie based on a new criteria.




* What will your output look like? Will it be a .txt file? a CSV file? something else? What information will it contain? >>>This is especially important if you are doing Option 3, but it's important for everyone!<<<
It will be a .csv file that has the new ranking of the movies.

